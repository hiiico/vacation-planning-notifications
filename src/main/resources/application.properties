spring.application.name=vacation-planning-notifications

# Database configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/vacation_planning-notifications?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&
spring.datasource.username=${db_username}
spring.datasource.password=${db_password}
logging.level.org.hibernate.persister.entity=ERROR

management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.probes.enabled=true

# Email Sender configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${spring.mail.username}
spring.mail.password=${spring.mail.password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
#Change server port
server.port=8081

#kafka broker running location
spring.kafka.bootstrap-servers=localhost:9092
#JSON Deserializer (for receiving)
# --- consumer ---
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# trust all your payload classes
spring.kafka.consumer.properties.spring.json.trusted.packages=app.event.payload,java.util,java.lang
# in dev mode
#spring.kafka.consumer.properties.spring.json.trusted.packeges=*

#to avoid duplication of consumption
spring.kafka.consumer.group-id=vacation-planning-notifications
spring.kafka.consumer.auto-offset-reset=latest
#auto-offset-reset: latest   # ignore old messages
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=manual

