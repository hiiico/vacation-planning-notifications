spring.application.name=vacation-planning-notifications
#MVC configuration
spring.mvc.hiddenmethod.filter.enabled=true

# Database configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/vacation_planning-notifications?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&
spring.datasource.username=${db_username}
spring.datasource.password=${db_password}
logging.level.org.hibernate.persister.entity=ERROR
#Change server port
server.port=8081

management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.probes.enabled=true

# Email Sender configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${spring.mail.username}
spring.mail.password=${spring.mail.password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#kafka broker running location
spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=localhost:9092, 9093, 9094 for many brokers

# --- Consumer (for input events) ---
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.group-id=vacation-planning-notifications
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.enable-auto-commit=false
#spring.kafka.consumer.properties.spring.json.trusted.packages=app.event.payload,java.util,java.lang
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.add.type.headers=false

spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.fasterxml.jackson.databind.JsonNode

# --- Listener ---
spring.kafka.listener.ack-mode=record
spring.kafka.listener.concurrency=3

# --- Producer (for replies) ---
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.properties.max-in-flight-requests-per-connection=5
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.spring.json.add.type.headers=false

# --- Topics ---
app.kafka.input-topic=user-event.v1
app.kafka.reply-topic=user-event.reply.v1



