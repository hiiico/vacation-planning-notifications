spring.application.name=vacation-planning-notifications
#MVC configuration
spring.mvc.hiddenmethod.filter.enabled=true
# Database configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://shared-mysql-db:3306/vacation_planning-notifications?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=${db_username}
spring.datasource.password=${db_password}
logging.level.org.hibernate.persister.entity=ERROR

feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=5000
vacation_planning.base-url=http://host.docker.internal:8080

# Email Sender configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${spring.mail.username}
spring.mail.password=${spring.mail.password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#kafka broker running location
spring.kafka.bootstrap-servers=kafka:9092
#JSON Deserializer (for receiving)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packeges=*
spring.kafka.consumer.properties.spring.json.trusted.packages=app.event.payload,java.util,java.lang
spring.kafka.consumer.properties.fetch.max.wait.ms=120000
spring.kafka.consumer.group-id=vacation-planning-notifications
spring.kafka.consumer.auto-offset-reset=earliest
#auto-offset-reset: latest   # ignore old messages
# Add to both application-prod.properties files
logging.level.org.apache.kafka=DEBUG
logging.level.org.springframework.kafka=DEBUG

